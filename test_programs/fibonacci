function fibonacci(n) do # в передаче параметров надо ли указывать тип?
    if n < 0 do
        ... ? как вернуть код ошибки?
        n := -1
        return
    if n = 0 do
        n(0) := 1 # единственный способ вернуть значение - через переданный параметр, причём он может быть только один
        return
    if n = 1 do
        n(0) := 1
        return
    int i
    i(0) := 1
    # можно ли определить приведение инта к массиву и написать int i := 0?
    # как объявлять массив сразу при инициализации? (нужна конструкция int i := [1, 2, nan, inf])
    int curr := 1
    int prev := 1
    while i < n do
        curr := curr + prev
        prev := curr
        i := i + 1
    n := curr
    return
done



function fibonacci_2(params) do # params: [n], returns [n, result]
    if params(0) < 0 do
        params(1) := -1
        return
    if params(0) <= 1 do
        params(1) := 1
        return
    int i
    i(0) := 1
    i(1) := 1
    i(2) := 1
    while i(0) < params(0) do
        i(1) := i(1) + i(2)
        i(2) := i(1)
        i(0) := i + 1
    finish do
        params(1) := i(1)
    done
done
    
    

function main do
    int f := 8
    fibonacci(f) # f = [8, 34]
    # можно по другому:
    int f := 8
    int res := nan
    int fib_pack
    fib_pack(0) := f
    fib_pack(1) := res
    fibonacci(fib_pack) # так как ссылочные типы, всё должно сработать и в этом случае?
done